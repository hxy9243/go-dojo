/*
OpenAPI Library Demo App

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// Borrow struct for Borrow
type Borrow struct {
	// id of the borrow
	Id         *string    `json:"id,omitempty"`
	UserId     *string    `json:"user-id,omitempty"`
	CopyId     *string    `json:"copy-id,omitempty"`
	BorrowTime *time.Time `json:"borrow-time,omitempty"`
	DueTime    *time.Time `json:"due-time,omitempty"`
	Status     *string    `json:"status,omitempty"`
}

// NewBorrow instantiates a new Borrow object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBorrow() *Borrow {
	this := Borrow{}
	return &this
}

// NewBorrowWithDefaults instantiates a new Borrow object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBorrowWithDefaults() *Borrow {
	this := Borrow{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Borrow) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Borrow) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Borrow) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Borrow) SetId(v string) {
	o.Id = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *Borrow) GetUserId() string {
	if o == nil || isNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Borrow) GetUserIdOk() (*string, bool) {
	if o == nil || isNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *Borrow) HasUserId() bool {
	if o != nil && !isNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *Borrow) SetUserId(v string) {
	o.UserId = &v
}

// GetCopyId returns the CopyId field value if set, zero value otherwise.
func (o *Borrow) GetCopyId() string {
	if o == nil || isNil(o.CopyId) {
		var ret string
		return ret
	}
	return *o.CopyId
}

// GetCopyIdOk returns a tuple with the CopyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Borrow) GetCopyIdOk() (*string, bool) {
	if o == nil || isNil(o.CopyId) {
		return nil, false
	}
	return o.CopyId, true
}

// HasCopyId returns a boolean if a field has been set.
func (o *Borrow) HasCopyId() bool {
	if o != nil && !isNil(o.CopyId) {
		return true
	}

	return false
}

// SetCopyId gets a reference to the given string and assigns it to the CopyId field.
func (o *Borrow) SetCopyId(v string) {
	o.CopyId = &v
}

// GetBorrowTime returns the BorrowTime field value if set, zero value otherwise.
func (o *Borrow) GetBorrowTime() time.Time {
	if o == nil || isNil(o.BorrowTime) {
		var ret time.Time
		return ret
	}
	return *o.BorrowTime
}

// GetBorrowTimeOk returns a tuple with the BorrowTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Borrow) GetBorrowTimeOk() (*time.Time, bool) {
	if o == nil || isNil(o.BorrowTime) {
		return nil, false
	}
	return o.BorrowTime, true
}

// HasBorrowTime returns a boolean if a field has been set.
func (o *Borrow) HasBorrowTime() bool {
	if o != nil && !isNil(o.BorrowTime) {
		return true
	}

	return false
}

// SetBorrowTime gets a reference to the given time.Time and assigns it to the BorrowTime field.
func (o *Borrow) SetBorrowTime(v time.Time) {
	o.BorrowTime = &v
}

// GetDueTime returns the DueTime field value if set, zero value otherwise.
func (o *Borrow) GetDueTime() time.Time {
	if o == nil || isNil(o.DueTime) {
		var ret time.Time
		return ret
	}
	return *o.DueTime
}

// GetDueTimeOk returns a tuple with the DueTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Borrow) GetDueTimeOk() (*time.Time, bool) {
	if o == nil || isNil(o.DueTime) {
		return nil, false
	}
	return o.DueTime, true
}

// HasDueTime returns a boolean if a field has been set.
func (o *Borrow) HasDueTime() bool {
	if o != nil && !isNil(o.DueTime) {
		return true
	}

	return false
}

// SetDueTime gets a reference to the given time.Time and assigns it to the DueTime field.
func (o *Borrow) SetDueTime(v time.Time) {
	o.DueTime = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Borrow) GetStatus() string {
	if o == nil || isNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Borrow) GetStatusOk() (*string, bool) {
	if o == nil || isNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Borrow) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Borrow) SetStatus(v string) {
	o.Status = &v
}

func (o Borrow) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.UserId) {
		toSerialize["user-id"] = o.UserId
	}
	if !isNil(o.CopyId) {
		toSerialize["copy-id"] = o.CopyId
	}
	if !isNil(o.BorrowTime) {
		toSerialize["borrow-time"] = o.BorrowTime
	}
	if !isNil(o.DueTime) {
		toSerialize["due-time"] = o.DueTime
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableBorrow struct {
	value *Borrow
	isSet bool
}

func (v NullableBorrow) Get() *Borrow {
	return v.value
}

func (v *NullableBorrow) Set(val *Borrow) {
	v.value = val
	v.isSet = true
}

func (v NullableBorrow) IsSet() bool {
	return v.isSet
}

func (v *NullableBorrow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBorrow(val *Borrow) *NullableBorrow {
	return &NullableBorrow{value: val, isSet: true}
}

func (v NullableBorrow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBorrow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
